/*
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * OpenAPI spec version: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CollectionMeta;
import io.swagger.client.model.Dictionaries;
import io.swagger.client.model.FlightOffer;
import io.swagger.client.model.Issue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Success1
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-05T13:16:41.117316-07:00[America/Hermosillo]")

public class Success1 {
  @SerializedName("data")
  private List<FlightOffer> data = new ArrayList<FlightOffer>();

  @SerializedName("dictionaries")
  private Dictionaries dictionaries = null;

  @SerializedName("meta")
  private CollectionMeta meta = null;

  @SerializedName("warnings")
  private List<Issue> warnings = null;

  public Success1 data(List<FlightOffer> data) {
    this.data = data;
    return this;
  }

  public Success1 addDataItem(FlightOffer dataItem) {
    this.data.add(dataItem);
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @Schema(required = true, description = "")
  public List<FlightOffer> getData() {
    return data;
  }

  public void setData(List<FlightOffer> data) {
    this.data = data;
  }

  public Success1 dictionaries(Dictionaries dictionaries) {
    this.dictionaries = dictionaries;
    return this;
  }

   /**
   * Get dictionaries
   * @return dictionaries
  **/
  @Schema(description = "")
  public Dictionaries getDictionaries() {
    return dictionaries;
  }

  public void setDictionaries(Dictionaries dictionaries) {
    this.dictionaries = dictionaries;
  }

  public Success1 meta(CollectionMeta meta) {
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @Schema(description = "")
  public CollectionMeta getMeta() {
    return meta;
  }

  public void setMeta(CollectionMeta meta) {
    this.meta = meta;
  }

  public Success1 warnings(List<Issue> warnings) {
    this.warnings = warnings;
    return this;
  }

  public Success1 addWarningsItem(Issue warningsItem) {
    if (this.warnings == null) {
      this.warnings = new ArrayList<Issue>();
    }
    this.warnings.add(warningsItem);
    return this;
  }

   /**
   * Get warnings
   * @return warnings
  **/
  @Schema(description = "")
  public List<Issue> getWarnings() {
    return warnings;
  }

  public void setWarnings(List<Issue> warnings) {
    this.warnings = warnings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Success1 success1 = (Success1) o;
    return Objects.equals(this.data, success1.data) &&
        Objects.equals(this.dictionaries, success1.dictionaries) &&
        Objects.equals(this.meta, success1.meta) &&
        Objects.equals(this.warnings, success1.warnings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, dictionaries, meta, warnings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Success1 {\n");
    
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    dictionaries: ").append(toIndentedString(dictionaries)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
