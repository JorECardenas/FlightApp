/*
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * OpenAPI spec version: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Fee;
import io.swagger.client.model.Tax;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Price
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-05T13:16:41.117316-07:00[America/Hermosillo]")

public class Price {
  @SerializedName("base")
  private String base = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("fees")
  private List<Fee> fees = null;

  @SerializedName("refundableTaxes")
  private String refundableTaxes = null;

  @SerializedName("taxes")
  private List<Tax> taxes = null;

  @SerializedName("total")
  private String total = null;

  public Price base(String base) {
    this.base = base;
    return this;
  }

   /**
   * Amount without taxes
   * @return base
  **/
  @Schema(example = "632.70", description = "Amount without taxes")
  public String getBase() {
    return base;
  }

  public void setBase(String base) {
    this.base = base;
  }

  public Price currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(example = "USD", description = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Price fees(List<Fee> fees) {
    this.fees = fees;
    return this;
  }

  public Price addFeesItem(Fee feesItem) {
    if (this.fees == null) {
      this.fees = new ArrayList<Fee>();
    }
    this.fees.add(feesItem);
    return this;
  }

   /**
   * List of applicable fees
   * @return fees
  **/
  @Schema(description = "List of applicable fees")
  public List<Fee> getFees() {
    return fees;
  }

  public void setFees(List<Fee> fees) {
    this.fees = fees;
  }

  public Price refundableTaxes(String refundableTaxes) {
    this.refundableTaxes = refundableTaxes;
    return this;
  }

   /**
   * The amount of taxes which are refundable
   * @return refundableTaxes
  **/
  @Schema(example = "200.00", description = "The amount of taxes which are refundable")
  public String getRefundableTaxes() {
    return refundableTaxes;
  }

  public void setRefundableTaxes(String refundableTaxes) {
    this.refundableTaxes = refundableTaxes;
  }

  public Price taxes(List<Tax> taxes) {
    this.taxes = taxes;
    return this;
  }

  public Price addTaxesItem(Tax taxesItem) {
    if (this.taxes == null) {
      this.taxes = new ArrayList<Tax>();
    }
    this.taxes.add(taxesItem);
    return this;
  }

   /**
   * Get taxes
   * @return taxes
  **/
  @Schema(description = "")
  public List<Tax> getTaxes() {
    return taxes;
  }

  public void setTaxes(List<Tax> taxes) {
    this.taxes = taxes;
  }

  public Price total(String total) {
    this.total = total;
    return this;
  }

   /**
   * Total amount paid by the user
   * @return total
  **/
  @Schema(example = "932.70", description = "Total amount paid by the user")
  public String getTotal() {
    return total;
  }

  public void setTotal(String total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Price price = (Price) o;
    return Objects.equals(this.base, price.base) &&
        Objects.equals(this.currency, price.currency) &&
        Objects.equals(this.fees, price.fees) &&
        Objects.equals(this.refundableTaxes, price.refundableTaxes) &&
        Objects.equals(this.taxes, price.taxes) &&
        Objects.equals(this.total, price.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(base, currency, fees, refundableTaxes, taxes, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Price {\n");
    
    sb.append("    base: ").append(toIndentedString(base)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    fees: ").append(toIndentedString(fees)).append("\n");
    sb.append("    refundableTaxes: ").append(toIndentedString(refundableTaxes)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
