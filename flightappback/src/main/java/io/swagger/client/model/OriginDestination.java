/*
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * OpenAPI spec version: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DateTimeRange;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * OriginDestination
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-05T13:16:41.117316-07:00[America/Hermosillo]")

public class OriginDestination {
  @SerializedName("alternativeDestinationsCodes")
  private List<String> alternativeDestinationsCodes = null;

  @SerializedName("alternativeOriginsCodes")
  private List<String> alternativeOriginsCodes = null;

  @SerializedName("arrivalDateTimeRange")
  private DateTimeRange arrivalDateTimeRange = null;

  @SerializedName("departureDateTimeRange")
  private DateTimeRange departureDateTimeRange = null;

  @SerializedName("destinationLocationCode")
  private String destinationLocationCode = null;

  @SerializedName("destinationRadius")
  private BigDecimal destinationRadius = null;

  @SerializedName("excludedConnectionPoints")
  private List<String> excludedConnectionPoints = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("includedConnectionPoints")
  private List<String> includedConnectionPoints = null;

  @SerializedName("originLocationCode")
  private String originLocationCode = null;

  @SerializedName("originRadius")
  private BigDecimal originRadius = null;

  public OriginDestination alternativeDestinationsCodes(List<String> alternativeDestinationsCodes) {
    this.alternativeDestinationsCodes = alternativeDestinationsCodes;
    return this;
  }

  public OriginDestination addAlternativeDestinationsCodesItem(String alternativeDestinationsCodesItem) {
    if (this.alternativeDestinationsCodes == null) {
      this.alternativeDestinationsCodes = new ArrayList<String>();
    }
    this.alternativeDestinationsCodes.add(alternativeDestinationsCodesItem);
    return this;
  }

   /**
   * Set of alternative destination location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.
   * @return alternativeDestinationsCodes
  **/
  @Schema(description = "Set of alternative destination location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.")
  public List<String> getAlternativeDestinationsCodes() {
    return alternativeDestinationsCodes;
  }

  public void setAlternativeDestinationsCodes(List<String> alternativeDestinationsCodes) {
    this.alternativeDestinationsCodes = alternativeDestinationsCodes;
  }

  public OriginDestination alternativeOriginsCodes(List<String> alternativeOriginsCodes) {
    this.alternativeOriginsCodes = alternativeOriginsCodes;
    return this;
  }

  public OriginDestination addAlternativeOriginsCodesItem(String alternativeOriginsCodesItem) {
    if (this.alternativeOriginsCodes == null) {
      this.alternativeOriginsCodes = new ArrayList<String>();
    }
    this.alternativeOriginsCodes.add(alternativeOriginsCodesItem);
    return this;
  }

   /**
   * Set of alternative origin location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.
   * @return alternativeOriginsCodes
  **/
  @Schema(example = "[\"LON\",\"MUC\"]", description = "Set of alternative origin location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.")
  public List<String> getAlternativeOriginsCodes() {
    return alternativeOriginsCodes;
  }

  public void setAlternativeOriginsCodes(List<String> alternativeOriginsCodes) {
    this.alternativeOriginsCodes = alternativeOriginsCodes;
  }

  public OriginDestination arrivalDateTimeRange(DateTimeRange arrivalDateTimeRange) {
    this.arrivalDateTimeRange = arrivalDateTimeRange;
    return this;
  }

   /**
   * Get arrivalDateTimeRange
   * @return arrivalDateTimeRange
  **/
  @Schema(description = "")
  public DateTimeRange getArrivalDateTimeRange() {
    return arrivalDateTimeRange;
  }

  public void setArrivalDateTimeRange(DateTimeRange arrivalDateTimeRange) {
    this.arrivalDateTimeRange = arrivalDateTimeRange;
  }

  public OriginDestination departureDateTimeRange(DateTimeRange departureDateTimeRange) {
    this.departureDateTimeRange = departureDateTimeRange;
    return this;
  }

   /**
   * Get departureDateTimeRange
   * @return departureDateTimeRange
  **/
  @Schema(description = "")
  public DateTimeRange getDepartureDateTimeRange() {
    return departureDateTimeRange;
  }

  public void setDepartureDateTimeRange(DateTimeRange departureDateTimeRange) {
    this.departureDateTimeRange = departureDateTimeRange;
  }

  public OriginDestination destinationLocationCode(String destinationLocationCode) {
    this.destinationLocationCode = destinationLocationCode;
    return this;
  }

   /**
   * Destination location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.
   * @return destinationLocationCode
  **/
  @Schema(example = "NYC", description = "Destination location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.")
  public String getDestinationLocationCode() {
    return destinationLocationCode;
  }

  public void setDestinationLocationCode(String destinationLocationCode) {
    this.destinationLocationCode = destinationLocationCode;
  }

  public OriginDestination destinationRadius(BigDecimal destinationRadius) {
    this.destinationRadius = destinationRadius;
    return this;
  }

   /**
   * Include other possible locations around the point, located less than this distance in kilometers away. Max:300  Can not be combined with \&quot;dateWindow\&quot; or \&quot;timeWindow\&quot;. 
   * @return destinationRadius
  **/
  @Schema(example = "200", description = "Include other possible locations around the point, located less than this distance in kilometers away. Max:300  Can not be combined with \"dateWindow\" or \"timeWindow\". ")
  public BigDecimal getDestinationRadius() {
    return destinationRadius;
  }

  public void setDestinationRadius(BigDecimal destinationRadius) {
    this.destinationRadius = destinationRadius;
  }

  public OriginDestination excludedConnectionPoints(List<String> excludedConnectionPoints) {
    this.excludedConnectionPoints = excludedConnectionPoints;
    return this;
  }

  public OriginDestination addExcludedConnectionPointsItem(String excludedConnectionPointsItem) {
    if (this.excludedConnectionPoints == null) {
      this.excludedConnectionPoints = new ArrayList<String>();
    }
    this.excludedConnectionPoints.add(excludedConnectionPointsItem);
    return this;
  }

   /**
   * List of excluded connections points. Any FlightOffer with these connections points will be present in response. Currently, only the locations defined in IATA are supported. Used only by the AMADEUS provider
   * @return excludedConnectionPoints
  **/
  @Schema(example = "[\"MRS\"]", description = "List of excluded connections points. Any FlightOffer with these connections points will be present in response. Currently, only the locations defined in IATA are supported. Used only by the AMADEUS provider")
  public List<String> getExcludedConnectionPoints() {
    return excludedConnectionPoints;
  }

  public void setExcludedConnectionPoints(List<String> excludedConnectionPoints) {
    this.excludedConnectionPoints = excludedConnectionPoints;
  }

  public OriginDestination id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "1", description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public OriginDestination includedConnectionPoints(List<String> includedConnectionPoints) {
    this.includedConnectionPoints = includedConnectionPoints;
    return this;
  }

  public OriginDestination addIncludedConnectionPointsItem(String includedConnectionPointsItem) {
    if (this.includedConnectionPoints == null) {
      this.includedConnectionPoints = new ArrayList<String>();
    }
    this.includedConnectionPoints.add(includedConnectionPointsItem);
    return this;
  }

   /**
   * List of included connections points. When an includedViaPoints option is specified, all FlightOffer returned must at least go via this Connecting Point. Currently, only the locations defined in IATA are supported. Used only by the AMADEUS provider
   * @return includedConnectionPoints
  **/
  @Schema(example = "[\"MRS\"]", description = "List of included connections points. When an includedViaPoints option is specified, all FlightOffer returned must at least go via this Connecting Point. Currently, only the locations defined in IATA are supported. Used only by the AMADEUS provider")
  public List<String> getIncludedConnectionPoints() {
    return includedConnectionPoints;
  }

  public void setIncludedConnectionPoints(List<String> includedConnectionPoints) {
    this.includedConnectionPoints = includedConnectionPoints;
  }

  public OriginDestination originLocationCode(String originLocationCode) {
    this.originLocationCode = originLocationCode;
    return this;
  }

   /**
   * Origin location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.
   * @return originLocationCode
  **/
  @Schema(example = "PAR", description = "Origin location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.")
  public String getOriginLocationCode() {
    return originLocationCode;
  }

  public void setOriginLocationCode(String originLocationCode) {
    this.originLocationCode = originLocationCode;
  }

  public OriginDestination originRadius(BigDecimal originRadius) {
    this.originRadius = originRadius;
    return this;
  }

   /**
   * Include other possible locations around the point, located less than this distance in kilometers away. Max:300  Can not be combined with \&quot;dateWindow\&quot; or \&quot;timeWindow\&quot;. 
   * @return originRadius
  **/
  @Schema(example = "200", description = "Include other possible locations around the point, located less than this distance in kilometers away. Max:300  Can not be combined with \"dateWindow\" or \"timeWindow\". ")
  public BigDecimal getOriginRadius() {
    return originRadius;
  }

  public void setOriginRadius(BigDecimal originRadius) {
    this.originRadius = originRadius;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OriginDestination originDestination = (OriginDestination) o;
    return Objects.equals(this.alternativeDestinationsCodes, originDestination.alternativeDestinationsCodes) &&
        Objects.equals(this.alternativeOriginsCodes, originDestination.alternativeOriginsCodes) &&
        Objects.equals(this.arrivalDateTimeRange, originDestination.arrivalDateTimeRange) &&
        Objects.equals(this.departureDateTimeRange, originDestination.departureDateTimeRange) &&
        Objects.equals(this.destinationLocationCode, originDestination.destinationLocationCode) &&
        Objects.equals(this.destinationRadius, originDestination.destinationRadius) &&
        Objects.equals(this.excludedConnectionPoints, originDestination.excludedConnectionPoints) &&
        Objects.equals(this.id, originDestination.id) &&
        Objects.equals(this.includedConnectionPoints, originDestination.includedConnectionPoints) &&
        Objects.equals(this.originLocationCode, originDestination.originLocationCode) &&
        Objects.equals(this.originRadius, originDestination.originRadius);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alternativeDestinationsCodes, alternativeOriginsCodes, arrivalDateTimeRange, departureDateTimeRange, destinationLocationCode, destinationRadius, excludedConnectionPoints, id, includedConnectionPoints, originLocationCode, originRadius);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OriginDestination {\n");
    
    sb.append("    alternativeDestinationsCodes: ").append(toIndentedString(alternativeDestinationsCodes)).append("\n");
    sb.append("    alternativeOriginsCodes: ").append(toIndentedString(alternativeOriginsCodes)).append("\n");
    sb.append("    arrivalDateTimeRange: ").append(toIndentedString(arrivalDateTimeRange)).append("\n");
    sb.append("    departureDateTimeRange: ").append(toIndentedString(departureDateTimeRange)).append("\n");
    sb.append("    destinationLocationCode: ").append(toIndentedString(destinationLocationCode)).append("\n");
    sb.append("    destinationRadius: ").append(toIndentedString(destinationRadius)).append("\n");
    sb.append("    excludedConnectionPoints: ").append(toIndentedString(excludedConnectionPoints)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    includedConnectionPoints: ").append(toIndentedString(includedConnectionPoints)).append("\n");
    sb.append("    originLocationCode: ").append(toIndentedString(originLocationCode)).append("\n");
    sb.append("    originRadius: ").append(toIndentedString(originRadius)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
