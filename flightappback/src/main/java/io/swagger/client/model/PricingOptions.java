/*
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * OpenAPI spec version: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.PricingOptionsFareType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PricingOptions
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-05T13:16:41.117316-07:00[America/Hermosillo]")

public class PricingOptions {
  @SerializedName("fareType")
  private PricingOptionsFareType fareType = null;

  @SerializedName("includedCheckedBagsOnly")
  private Boolean includedCheckedBagsOnly = null;

  @SerializedName("noPenaltyFare")
  private Boolean noPenaltyFare = null;

  @SerializedName("noRestrictionFare")
  private Boolean noRestrictionFare = null;

  @SerializedName("refundableFare")
  private Boolean refundableFare = null;

  public PricingOptions fareType(PricingOptionsFareType fareType) {
    this.fareType = fareType;
    return this;
  }

   /**
   * Get fareType
   * @return fareType
  **/
  @Schema(description = "")
  public PricingOptionsFareType getFareType() {
    return fareType;
  }

  public void setFareType(PricingOptionsFareType fareType) {
    this.fareType = fareType;
  }

  public PricingOptions includedCheckedBagsOnly(Boolean includedCheckedBagsOnly) {
    this.includedCheckedBagsOnly = includedCheckedBagsOnly;
    return this;
  }

   /**
   * If true, returns the flight-offers with included checked bags only
   * @return includedCheckedBagsOnly
  **/
  @Schema(example = "true", description = "If true, returns the flight-offers with included checked bags only")
  public Boolean isIncludedCheckedBagsOnly() {
    return includedCheckedBagsOnly;
  }

  public void setIncludedCheckedBagsOnly(Boolean includedCheckedBagsOnly) {
    this.includedCheckedBagsOnly = includedCheckedBagsOnly;
  }

  public PricingOptions noPenaltyFare(Boolean noPenaltyFare) {
    this.noPenaltyFare = noPenaltyFare;
    return this;
  }

   /**
   * If true, returns the flight-offers with no penalty fares only
   * @return noPenaltyFare
  **/
  @Schema(example = "true", description = "If true, returns the flight-offers with no penalty fares only")
  public Boolean isNoPenaltyFare() {
    return noPenaltyFare;
  }

  public void setNoPenaltyFare(Boolean noPenaltyFare) {
    this.noPenaltyFare = noPenaltyFare;
  }

  public PricingOptions noRestrictionFare(Boolean noRestrictionFare) {
    this.noRestrictionFare = noRestrictionFare;
    return this;
  }

   /**
   * If true, returns the flight-offers with no restriction fares only
   * @return noRestrictionFare
  **/
  @Schema(example = "true", description = "If true, returns the flight-offers with no restriction fares only")
  public Boolean isNoRestrictionFare() {
    return noRestrictionFare;
  }

  public void setNoRestrictionFare(Boolean noRestrictionFare) {
    this.noRestrictionFare = noRestrictionFare;
  }

  public PricingOptions refundableFare(Boolean refundableFare) {
    this.refundableFare = refundableFare;
    return this;
  }

   /**
   * If true, returns the flight-offers with refundable fares only
   * @return refundableFare
  **/
  @Schema(example = "true", description = "If true, returns the flight-offers with refundable fares only")
  public Boolean isRefundableFare() {
    return refundableFare;
  }

  public void setRefundableFare(Boolean refundableFare) {
    this.refundableFare = refundableFare;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PricingOptions pricingOptions = (PricingOptions) o;
    return Objects.equals(this.fareType, pricingOptions.fareType) &&
        Objects.equals(this.includedCheckedBagsOnly, pricingOptions.includedCheckedBagsOnly) &&
        Objects.equals(this.noPenaltyFare, pricingOptions.noPenaltyFare) &&
        Objects.equals(this.noRestrictionFare, pricingOptions.noRestrictionFare) &&
        Objects.equals(this.refundableFare, pricingOptions.refundableFare);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fareType, includedCheckedBagsOnly, noPenaltyFare, noRestrictionFare, refundableFare);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PricingOptions {\n");
    
    sb.append("    fareType: ").append(toIndentedString(fareType)).append("\n");
    sb.append("    includedCheckedBagsOnly: ").append(toIndentedString(includedCheckedBagsOnly)).append("\n");
    sb.append("    noPenaltyFare: ").append(toIndentedString(noPenaltyFare)).append("\n");
    sb.append("    noRestrictionFare: ").append(toIndentedString(noRestrictionFare)).append("\n");
    sb.append("    refundableFare: ").append(toIndentedString(refundableFare)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
