/*
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * OpenAPI spec version: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Restriction towards carriers.
 */
@Schema(description = "Restriction towards carriers.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-05T13:16:41.117316-07:00[America/Hermosillo]")

public class CarrierRestrictions {
  @SerializedName("blacklistedInEUAllowed")
  private Boolean blacklistedInEUAllowed = null;

  @SerializedName("excludedCarrierCodes")
  private List<String> excludedCarrierCodes = null;

  @SerializedName("includedCarrierCodes")
  private List<String> includedCarrierCodes = null;

  public CarrierRestrictions blacklistedInEUAllowed(Boolean blacklistedInEUAllowed) {
    this.blacklistedInEUAllowed = blacklistedInEUAllowed;
    return this;
  }

   /**
   * This flag enable/disable filtering of blacklisted airline by EU. The list of the banned airlines is published in the Official Journal of the European Union, where they are included as annexes A and B to the Commission Regulation. The blacklist of an airline can concern all its flights or some specific aircraft types pertaining to the airline
   * @return blacklistedInEUAllowed
  **/
  @Schema(description = "This flag enable/disable filtering of blacklisted airline by EU. The list of the banned airlines is published in the Official Journal of the European Union, where they are included as annexes A and B to the Commission Regulation. The blacklist of an airline can concern all its flights or some specific aircraft types pertaining to the airline")
  public Boolean isBlacklistedInEUAllowed() {
    return blacklistedInEUAllowed;
  }

  public void setBlacklistedInEUAllowed(Boolean blacklistedInEUAllowed) {
    this.blacklistedInEUAllowed = blacklistedInEUAllowed;
  }

  public CarrierRestrictions excludedCarrierCodes(List<String> excludedCarrierCodes) {
    this.excludedCarrierCodes = excludedCarrierCodes;
    return this;
  }

  public CarrierRestrictions addExcludedCarrierCodesItem(String excludedCarrierCodesItem) {
    if (this.excludedCarrierCodes == null) {
      this.excludedCarrierCodes = new ArrayList<String>();
    }
    this.excludedCarrierCodes.add(excludedCarrierCodesItem);
    return this;
  }

   /**
   * This option ensures that the system will only consider these airlines.
   * @return excludedCarrierCodes
  **/
  @Schema(description = "This option ensures that the system will only consider these airlines.")
  public List<String> getExcludedCarrierCodes() {
    return excludedCarrierCodes;
  }

  public void setExcludedCarrierCodes(List<String> excludedCarrierCodes) {
    this.excludedCarrierCodes = excludedCarrierCodes;
  }

  public CarrierRestrictions includedCarrierCodes(List<String> includedCarrierCodes) {
    this.includedCarrierCodes = includedCarrierCodes;
    return this;
  }

  public CarrierRestrictions addIncludedCarrierCodesItem(String includedCarrierCodesItem) {
    if (this.includedCarrierCodes == null) {
      this.includedCarrierCodes = new ArrayList<String>();
    }
    this.includedCarrierCodes.add(includedCarrierCodesItem);
    return this;
  }

   /**
   * This option ensures that the system will only consider these airlines.
   * @return includedCarrierCodes
  **/
  @Schema(description = "This option ensures that the system will only consider these airlines.")
  public List<String> getIncludedCarrierCodes() {
    return includedCarrierCodes;
  }

  public void setIncludedCarrierCodes(List<String> includedCarrierCodes) {
    this.includedCarrierCodes = includedCarrierCodes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CarrierRestrictions carrierRestrictions = (CarrierRestrictions) o;
    return Objects.equals(this.blacklistedInEUAllowed, carrierRestrictions.blacklistedInEUAllowed) &&
        Objects.equals(this.excludedCarrierCodes, carrierRestrictions.excludedCarrierCodes) &&
        Objects.equals(this.includedCarrierCodes, carrierRestrictions.includedCarrierCodes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blacklistedInEUAllowed, excludedCarrierCodes, includedCarrierCodes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CarrierRestrictions {\n");
    
    sb.append("    blacklistedInEUAllowed: ").append(toIndentedString(blacklistedInEUAllowed)).append("\n");
    sb.append("    excludedCarrierCodes: ").append(toIndentedString(excludedCarrierCodes)).append("\n");
    sb.append("    includedCarrierCodes: ").append(toIndentedString(includedCarrierCodes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
