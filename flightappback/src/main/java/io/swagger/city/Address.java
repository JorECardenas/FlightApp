/*
 * Airport & City Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, in test this API only contains data from the United States, Spain, United Kingdom, Germany and India. 
 *
 * OpenAPI spec version: 1.2.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.city;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Address
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-07T23:25:36.596623-07:00[America/Hermosillo]")

public class Address {
  @SerializedName("cityName")
  private String cityName = null;

  @SerializedName("cityCode")
  private String cityCode = null;

  @SerializedName("countryName")
  private String countryName = null;

  @SerializedName("countryCode")
  private String countryCode = null;

  @SerializedName("stateCode")
  private String stateCode = null;

  @SerializedName("regionCode")
  private String regionCode = null;

  public Address cityName(String cityName) {
    this.cityName = cityName;
    return this;
  }

   /**
   * name of the city of the location; equal to name if the location is a city
   * @return cityName
  **/
  @Schema(example = "Paris", description = "name of the city of the location; equal to name if the location is a city")
  public String getCityName() {
    return cityName;
  }

  public void setCityName(String cityName) {
    this.cityName = cityName;
  }

  public Address cityCode(String cityCode) {
    this.cityCode = cityCode;
    return this;
  }

   /**
   * IATA code of the city of the location; equal to IATAcode if the location is a city
   * @return cityCode
  **/
  @Schema(example = "PAR", description = "IATA code of the city of the location; equal to IATAcode if the location is a city")
  public String getCityCode() {
    return cityCode;
  }

  public void setCityCode(String cityCode) {
    this.cityCode = cityCode;
  }

  public Address countryName(String countryName) {
    this.countryName = countryName;
    return this;
  }

   /**
   * name of the country of the location
   * @return countryName
  **/
  @Schema(example = "France", description = "name of the country of the location")
  public String getCountryName() {
    return countryName;
  }

  public void setCountryName(String countryName) {
    this.countryName = countryName;
  }

  public Address countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * code of the country of the location in ISO standard
   * @return countryCode
  **/
  @Schema(example = "FR", description = "code of the country of the location in ISO standard")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public Address stateCode(String stateCode) {
    this.stateCode = stateCode;
    return this;
  }

   /**
   * code of the state of the location if any
   * @return stateCode
  **/
  @Schema(example = "TO", description = "code of the state of the location if any")
  public String getStateCode() {
    return stateCode;
  }

  public void setStateCode(String stateCode) {
    this.stateCode = stateCode;
  }

  public Address regionCode(String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

   /**
   * code of the region of the location in ISO standard
   * @return regionCode
  **/
  @Schema(example = "EUROP", description = "code of the region of the location in ISO standard")
  public String getRegionCode() {
    return regionCode;
  }

  public void setRegionCode(String regionCode) {
    this.regionCode = regionCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return Objects.equals(this.cityName, address.cityName) &&
        Objects.equals(this.cityCode, address.cityCode) &&
        Objects.equals(this.countryName, address.countryName) &&
        Objects.equals(this.countryCode, address.countryCode) &&
        Objects.equals(this.stateCode, address.stateCode) &&
        Objects.equals(this.regionCode, address.regionCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cityName, cityCode, countryName, countryCode, stateCode, regionCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");
    
    sb.append("    cityName: ").append(toIndentedString(cityName)).append("\n");
    sb.append("    cityCode: ").append(toIndentedString(cityCode)).append("\n");
    sb.append("    countryName: ").append(toIndentedString(countryName)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    stateCode: ").append(toIndentedString(stateCode)).append("\n");
    sb.append("    regionCode: ").append(toIndentedString(regionCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
