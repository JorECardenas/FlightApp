/*
 * Airport & City Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, in test this API only contains data from the United States, Spain, United Kingdom, Germany and India. 
 *
 * OpenAPI spec version: 1.2.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.city;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Links
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-07T23:25:36.596623-07:00[America/Hermosillo]")

public class Links {
  @SerializedName("href")
  private String href = null;

  /**
   * Gets or Sets methods
   */
  @JsonAdapter(MethodsEnum.Adapter.class)
  public enum MethodsEnum {
    @SerializedName("GET")
    GET("GET"),
    @SerializedName("PUT")
    PUT("PUT"),
    @SerializedName("DELETE")
    DELETE("DELETE"),
    @SerializedName("POST")
    POST("POST"),
    @SerializedName("PATCH")
    PATCH("PATCH");

    private String value;

    MethodsEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static MethodsEnum fromValue(String input) {
      for (MethodsEnum b : MethodsEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<MethodsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MethodsEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public MethodsEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return MethodsEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("methods")
  private List<MethodsEnum> methods = null;

  @SerializedName("count")
  private Integer count = null;

  public Links href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @Schema(required = true, description = "")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public Links methods(List<MethodsEnum> methods) {
    this.methods = methods;
    return this;
  }

  public Links addMethodsItem(MethodsEnum methodsItem) {
    if (this.methods == null) {
      this.methods = new ArrayList<MethodsEnum>();
    }
    this.methods.add(methodsItem);
    return this;
  }

   /**
   * Get methods
   * @return methods
  **/
  @Schema(description = "")
  public List<MethodsEnum> getMethods() {
    return methods;
  }

  public void setMethods(List<MethodsEnum> methods) {
    this.methods = methods;
  }

  public Links count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @Schema(description = "")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Links links = (Links) o;
    return Objects.equals(this.href, links.href) &&
        Objects.equals(this.methods, links.methods) &&
        Objects.equals(this.count, links.count);
  }

  @Override
  public int hashCode() {
    return Objects.hash(href, methods, count);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Links {\n");
    
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    methods: ").append(toIndentedString(methods)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
